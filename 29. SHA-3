#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdint.h>
#define TOTAL_LANES 25
#define RATE_LANES 16
#define CAPACITY_LANES 9
int all_capacity_filled(uint64_t* state) {
    for (int i = RATE_LANES; i < TOTAL_LANES; i++) {
        if (state[i] == 0) return 0;
    }
    return 1;
}
int main() {
    uint64_t state[TOTAL_LANES] = {0}; 
    srand(time(NULL));
    for (int i = 0; i < RATE_LANES; i++) {
        do {
            state[i] = ((uint64_t)rand() << 32) | rand();
        } while (state[i] == 0);
    }
    for (int i = RATE_LANES; i < TOTAL_LANES; i++) {
        state[i] = 0;
    }
    int rounds = 0;
    while (!all_capacity_filled(state)) {
        uint64_t block[RATE_LANES];
        for (int i = 0; i < RATE_LANES; i++) {
            do {
                block[i] = ((uint64_t)rand() << 32) | rand();
            } while (block[i] == 0);
        }
        for (int i = 0; i < RATE_LANES; i++) {
            state[i] ^= block[i];
        }
        int cap_index = RATE_LANES + rand() % CAPACITY_LANES;
        state[cap_index] |= (1ULL << (rand() % 64));
        rounds++;
    }
    printf("All capacity lanes filled with nonzero bits after %d rounds.\n", rounds);
    return 0;
}
