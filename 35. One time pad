#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <ctype.h>
#include <string.h>
#define MAX_LEN 1024
char encrypt_char(char c, int key) {
    if (isupper(c)) {
        return 'A' + (c - 'A' + key) % 26;
    } else if (islower(c)) {
        return 'a' + (c - 'a' + key) % 26;
    }
    return c;
}
char decrypt_char(char c, int key) {
    if (isupper(c)) {
        return 'A' + (c - 'A' - key + 26) % 26;
    } else if (islower(c)) {
        return 'a' + (c - 'a' - key + 26) % 26;
    }
    return c;
}
int main() {
    char plaintext[MAX_LEN];
    char ciphertext[MAX_LEN];
    char decrypted[MAX_LEN];
    int key[MAX_LEN];
    printf("Enter plaintext (letters only): ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0'; 
    srand(time(NULL));  
    int len = strlen(plaintext);
    for (int i = 0; i < len; i++) {
        if (isalpha(plaintext[i])) {
            key[i] = rand() % 27;  
            ciphertext[i] = encrypt_char(plaintext[i], key[i]);
        } else {
            key[i] = 0;  
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[len] = '\0';
    for (int i = 0; i < len; i++) {
        decrypted[i] = decrypt_char(ciphertext[i], key[i]);
    }
    decrypted[len] = '\0';
    printf("\nGenerated key: ");
    for (int i = 0; i < len; i++) {
        if (isalpha(plaintext[i]))
            printf("%d ", key[i]);
        else
            printf("_ ");  
    }
    printf("\nCiphertext: %s", ciphertext);
    printf("\nDecrypted : %s\n", decrypted);
    return 0;
}
