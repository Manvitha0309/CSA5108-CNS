#include <stdio.h>
#include <stdint.h>
#include <string.h>
int IP[] = {
     58, 50, 42, 34, 26, 18, 10,  2,
     60, 52, 44, 36, 28, 20, 12,  4,
     62, 54, 46, 38, 30, 22, 14,  6,
     64, 56, 48, 40, 32, 24, 16,  8,
     57, 49, 41, 33, 25, 17,  9,  1,
     59, 51, 43, 35, 27, 19, 11,  3,
     61, 53, 45, 37, 29, 21, 13,  5,
     63, 55, 47, 39, 31, 23, 15,  7
};
int FP[] = {
     40,  8, 48, 16, 56, 24, 64, 32,
     39,  7, 47, 15, 55, 23, 63, 31,
     38,  6, 46, 14, 54, 22, 62, 30,
     37,  5, 45, 13, 53, 21, 61, 29,
     36,  4, 44, 12, 52, 20, 60, 28,
     35,  3, 43, 11, 51, 19, 59, 27,
     34,  2, 42, 10, 50, 18, 58, 26,
     33,  1, 41,  9, 49, 17, 57, 25
};
uint64_t key = 0x133457799BBCDFF1;
uint32_t feistel(uint32_t half, uint64_t subkey) {
    return (half ^ (subkey & 0xFFFFFFFF)); 
}
uint64_t permute(uint64_t input, const int* table, int n) {
    uint64_t output = 0;
    for (int i = 0; i < n; i++) {
        output <<= 1;
        output |= (input >> (64 - table[i])) & 0x01;
    }
    return output;
}
uint64_t des_process(uint64_t block, int encrypt) {
    uint64_t permuted = permute(block, IP, 64);
    uint32_t L = (permuted >> 32) & 0xFFFFFFFF;
    uint32_t R = permuted & 0xFFFFFFFF;
    for (int round = 0; round < 16; round++) {
        uint64_t subkey = key >> (encrypt ? round : 15 - round); 
        uint32_t temp = R;
        R = L ^ feistel(R, subkey);
        L = temp;
    }
    uint64_t preoutput = ((uint64_t)R << 32) | L;
    return permute(preoutput, FP, 64);
}
uint64_t str_to_uint64(const char* str) {
    uint64_t val = 0;
    for (int i = 0; i < 8; i++) {
        val = (val << 8) | (unsigned char)str[i];
    }
    return val;
}
void uint64_to_str(uint64_t val, char* str) {
    for (int i = 7; i >= 0; i--) {
        str[i] = val & 0xFF;
        val >>= 8;
    }
    str[8] = '\0';
}
int main() {
    char plaintext[9] = "DESDEMO!";
    char decrypted[9];
    uint64_t pt = str_to_uint64(plaintext);
    printf("Plaintext: %s\n", plaintext);
    uint64_t ct = des_process(pt, 1);
    printf("Encrypted (hex): %016llX\n", ct);
    uint64_t dt = des_process(ct, 0);
    uint64_to_str(dt, decrypted);
    printf("Decrypted: %s\n", decrypted);
    return 0;
}
